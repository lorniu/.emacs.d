#+TITLE: ox-impress
#+OPTIONS: toc:nil tb:t pg:t single:1
#+IMPRESS_JS: ./impress.js
#+IMPRESS_CLASS: step slide
#+EXTRA_HEAD: <style>
#+EXTRA_HEAD:  body { background: #eee; } h1 { margin-top: 120px; color: darkgreen; font-size: 100px; }
#+EXTRA_HEAD:  pre { padding: 12px 20px; border:1px solid #666; border-radius: 3px; margin-left: 10px; background: white; }
#+EXTRA_HEAD:  .slide {
#+EXTRA_HEAD:     background: rgba(255,255,255,0.9); border-radius: 10px; box-shadow: 0 0 30px #000;
#+EXTRA_HEAD:     width: 1000px; height: 650px; padding: 20px 60px; box-sizing: border-box; font-size: 40px; line-height: 1.3em;
#+EXTRA_HEAD:  }
#+EXTRA_HEAD: </style>


* +Why another one?
:PROPERTIES:
:DATA: rotate-y:27.7 x:1000 z:-250
:END:

Ok, =impress.js= is great, I like it. And I want to use it in org-mode.

I googled and tried a lot, but at last I decide to write a new one.

#+BEGIN_EXPORT html
<span class="substep">To myself.&nbsp;</span>
<span class="substep">Yes, just keep it   <i style="color:darkgreen;font-weight:bolder;font-size:1.2em;">simple</i>.</span>
#+END_EXPORT

* +Requirements
:PROPERTIES:
:DATA: rotate-y:55.4 x:1250 z:-500
:END:


I'm using emacs 25 and org 9, and this works well:

- Impress.js
- ox-impress.el
- Org-Mode 9+
- Emacs, 25+

* +Installation
:PROPERTIES:
:data: rotate-y:83.1
:style: font-size: 32px;
:END:

1) Download =Impress.js= from [[https://github.com/impress/impress.js/][here]], and extract it to your favorite
   folder. Or you can search and choose a CDN instead.

2) Download this =ox-impress.el= to your emacs load-path,
   then load it with:
   #+BEGIN_SRC elisp
   (require ox-impress)
   #+END_SRC

* +API - Global Vars
:PROPERTIES:
:DATA: rotate-y:110.8
:CLASS: -slide
:STYLE: font-size: 24px; background:white; border-radius: 10px; font-style: italic;
:END:

#+CAPTION: In global config file, these variables can be used
| org-impress-javascript            | where is the =impress.js=                      |
| org-impress-stylesheet            | where is the your extra css file               |
| org-impress-ext-head              | the extra head, like =html_head= in ox-html    |
| org-impress-initial               | the scripts to initialize impress              |
| org-impress-base-class            | basic classes for all steps, default is 'step' |
| org-impress-home                  | export welcome page or not                     |
| org-impress-toolbar               | enable toolbar plugin or not                   |
| org-impress-progress              | enable processbar or not                       |
| org-impress-include-default-style | as its name, include or not                    |
| org-impress-single                | 0/1/2/3, whether zip ext files to html         |

* +API - Inbuffer Properties
:PROPERTIES:
:DATA: rotate-y:138.5
:CLASS: -slide
:STYLE: font-size: 24px; padding: 40px 80px; box-shadow: inset 0 0 50px #000;
:END:

#+CAPTION: Or use buffer-local properties as:
| #+IMPRESS_JS_FILE:     | yes, the js file.                              |
| #+IMPRESS_CSS_FILE:    | your css file                                  |
| #+IMPRESS_INITIAL:     | inital script, you can override the default    |
| #+IMPRESS_CLASS:       | base class add to all steps, default is 'step' |
| #+IMPRESS_ROOT:        | configs for the <div id="impress"> node        |
| #+IMPRESS_HOME:        | configs for the Welcome page                   |
| #+IMPRESS_TOC:         | configs for the toc page                       |
| #+IMPRESS_PAGE_HEADER: | insert before every slide page                 |
| #+IMPRESS_PAGE_FOOTER: | insert after every slide page                  |
| #+EXTRA_HEAD:          | extra head string                              |

* +API - Inbuffer Options
:PROPERTIES:
:DATA: rotate-y:166.2
:STYLE: font-size: 24px;
:END:

#+CAPTION: Also, these can be config in =#+OPTION:= of the .org file:
| default_style | t/nil, whether include default_style     |
| home          | t/nil, whether generate the Welcome page |
| tb            | t/nil, with toolbar or not               |
| pg            | t/nil, with processbar or not            |
| single        | 0/1/2/3, how to deal with ext files      |

For example:
#+BEGIN_SRC org
,#+OPTIONS: toc:nil tb:t pg:t single:1
,#+OPTIONS: default_style:nil
,#+IMPRESS_FILE_CSS: ./my-custom.css
,#+IMPRESS_BASE_CLASS: step slide
#+END_SRC

#+BEGIN_EXPORT html
<h2 style="color: red;position:absolute;right:10px;bottom:100px;transform:rotate(-25deg)" class="fly-in fly-out">Simple?  Yes, so easy!</h2>
#+END_EXPORT

* +A headline is a step
:PROPERTIES:
:DATA: rotate-y:193.9
:STYLE: font-size: 22px; background:white; padding: 20px 40px;
:END:

You can set variables for it with drawer properties:
- ~:custom_id:~ :: The ~id~ for the generated step node. if not specified, then use 'step-N' for default.


- ~:data:~ :: Specify the 'data-xxx' attributes for the step. for example:
  : x:33 y:44 rotate:30 transition-duration:3000         ===>
  : <div class="step" data-x='33' data-y=30 data-transition-duration='3000'>..

- ~:class:~ :: Specify classes. with '+/-' prefix for classes 'add/plus' based '=org-impress-base-class='.


- ~:style:~ :: Yes, just specify the inline style for the step node.

* +This is just a simple demo for a node
:PROPERTIES:
:DATA: rotate-y:221.6
:STYLE: font-size: 19px;
:END:

#+BEGIN_SRC org
,* this is a node/step
:PROPERTIES:
:CUSTOM_ID: id_for_the_step_if_set_or_will_be_STEP-N
:DATA: x:333 y:444 rel-z:555 rotate:66
:CLASS: step slide classes_add/rm/override_based_default
:STYLE: color: red; padding: 3333 ...
:END:

  Configurations for this node/step ONLY.

,* Another node/step

  When no property drawer, will generate 'div' with default config.

,* +A headline title with a '+' prefix

  When headline title with a '+', then the generated step will have a '<h1>' node, or omit..

#+END_SRC

Yes, syntax is so similar with the one in `impress.js`, but much easier and clear.

* +Miscellaneous
:PROPERTIES:
:DATA: rotate-y:249.2
:STYLE: font-size: 24px;
:END:

Config for the welcome page, just like this:
#+BEGIN_SRC org
  ,#+IMPRESS_HOME: x:44 y:55 class:step slide
#+END_SRC

The =#+IMPRESS_HOME:= property can set both 'data-xxx' and 'class=yyy':
  1. Please separate every =key:value= item with =space=
  2. if =class= is not absent, add to last.

As the same, =#+IMPRESS_TOC:= is for the 'Table of Content' page. If you
don't want this page generated, just set =#+OPTIONS: toc:nil=.

If you want to add some 'data-xxx' to root node(~<div id='impress'..~),
config =#+IMPRESS_ROOT:= property.

* +For More
:PROPERTIES:
:DATA: rotate-y:277
:STYLE: font-size: 26px;
:END:

You can make the most of org-mode to your presentation, eg =babel=, =graph= etc.

#+BEGIN_EXPORT html
With all your<span class="anii"> Imagination</span>.
#+END_EXPORT

The ~README.org~ itself is just a demonstration for the usage of this plugin.

Generated [[./README.htm][README.html]] can be downloaded and opened in your browser.

Read it, test it and extend it.

#+BEGIN_EXPORT html
<i style="font-size:2em; line-height:100px; color:goldenrod">For more? To be continued...</i>
#+END_EXPORT

* +Thanks
:PROPERTIES:
:DATA: rotate-y:307.4
:END:

Courtesy to:

The powerful Emacs and Org-mode,

the impressive impress.js.

* +Copyright
:PROPERTIES:
:DATA: rotate-y:332.4
:END:

Copyright 2018 lorniu@gmail.com.

Released under the MIT License.

* Summary
:PROPERTIES:
:DATA: scale:5 rotate-x:30 x:3000 y:-1500
:class: step
:END:
