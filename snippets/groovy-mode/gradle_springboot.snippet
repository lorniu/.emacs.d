# -*- mode: snippet -*-
# name: build.gradle for springboot
# key: springboot
# --
buildscript {
    ext {
        springBootVersion = '${1:1.5.3.RELEASE}'
    }
    repositories {
        // mavenCentral()
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$\{springBootVersion\}")
        // classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

allprojects {
    repositories {
        // mavenCentral()
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = '${2:com.example}'
jar {
    baseName = '${3:`(file-name-base (directory-file-name (file-name-directory (buffer-file-name))))`}'
    version =  '0.1.0'
}

sourceCompatibility = ${4:1.8}
targetCompatibility = $4

dependencies {
    compile("org.springframework.boot:spring-boot-starter${5:-web}")
    // compile("org.springframework.boot:spring-boot-starter-data-jpa")
    // compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    // compile("com.h2database:h2")
    // compile("mysql:mysql-connector-java")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile("org.springframework.boot:spring-boot-devtools")
    compile("junit:junit")
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}